{"version":3,"sources":["context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/contacts/Contact.js","components/contacts/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","name","email","phone","dispatch","setState","Axios","get","res","this","data","value","props","children","Component","Consumer","TextInputGroup","label","placeholder","onChange","error","className","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","a","preventDefault","newContact","post","history","push","bind","EditContact","updContact","match","params","put","Header","branding","href","to","About","Contact","showContactInfo","onDeleteClick","delete","Fragment","style","cursor","onClick","color","float","Contacts","key","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.64ee0075.chunk.js","sourcesContent":["import React,{ Component } from 'react';\nimport Axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'DELETE_CONTACT' :\n        return {\n            ...state,\n            contacts: state.contacts.filter(contact => contact.id !== action.payload)\n        }\n\n\n        case 'ADD_CONTACT' :\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            }\n\n        case 'UPDATE_CONTACT':\n                return {\n                    ...state,\n                    contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact\n                    )\n                }\n        default: \n        return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [\n            {   \n                id: 1,\n                name: 'John Doe',\n                email: 'jdoe@gmail.com',\n                phone: '555-5555-55'\n            },\n            {   \n                id: 2,\n                name: 'Sarah Smith',\n                email: 'sara@gmail.com',\n                phone: '333-333-333'\n            },\n            {   \n                id: 3,\n                name: 'Henry Johnson',\n                email: 'henry@gmail.com',\n                phone: '666-666-666'\n            }\n        ],\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n    async componentDidMount(){\n           const res = await Axios.get('https://jsonplaceholder.typicode.com/users')\n            this.setState({contacts: res.data})\n    }\n    render(){\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = (\n    {\n    label, \n    name, \n    value, \n    placeholder, \n    type, \n    onChange,\n    error\n    }) => {\n\n    return (\n             <div className=\"form-group\">\n                 <label htmlFor={name}>{label}</label>\n                 <input type={type}\n                 name={name}\n                 className={classnames('form-control form-control-lg',\n                  {'is-invalid': error})}\n                 placeholder={placeholder}\n                 value={value}\n                 onChange={onChange}/>\n                 {error && <div className=\"invalid-feedback\">{error}</div>}\n                 \n            </div> \n    )\n}\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n\nTextInputGroup.defaultProps = {\n    type: \"text\"\n}\n\nexport default TextInputGroup;","\nimport React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport Axios from 'axios';\n\nexport default class AddContact extends Component {\n\n    state= {\n        name:'',\n        email:'',\n        phone:'',\n        errors: {}\n    }\n\n    onChange = (e) => this.setState({[e.target.name] : e.target.value})\n\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const {name, email, phone} = this.state;\n\n        if(name === ''){\n            this.setState({errors: {name: 'Name Is required'}});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: 'Email Is required'}})\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: 'Name Is required'}});\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone\n        }\n       const res =  await Axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n        \n       dispatch({type:'ADD_CONTACT', payload: res.data})\n        \n        //Clear State\n        this.setState({\n            name:'',\n            email:'',\n            phone:'',\n            errors: {}\n        })\n        this.props.history.push('/')\n    }\n    render() {\n        const {name, email, phone, errors} = this.state;\n        return(\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card-mb-3\">\n                        <div className=\"card-header\"><h5>Add new contact</h5></div>\n                        <div className=\"card-body\">\n                         <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                        <TextInputGroup \n                        label=\"Name\" \n                        name=\"name\"\n                        value={name}\n                        placeholder=\"Enter a name...\"\n                        onChange={this.onChange}\n                        error={errors.name}\n                        />\n                        <TextInputGroup \n                        label=\"Email\" \n                        name=\"email\"\n                        value={email}\n                        placeholder=\"Enter email\"\n                        type=\"email\"\n                        onChange={this.onChange}\n                        error={errors.email}\n                        />\n                        <TextInputGroup \n                        label=\"Phone Number\" \n                        name=\"phone\"\n                        value={phone}\n                        placeholder=\"Enter Phone Number\"\n                        onChange={this.onChange}\n                        error={errors.phone}\n                          />\n                        <input type=\"submit\" className=\"btn btn-block btn-light\" value=\"Add\"/>\n                    </form>\n                </div>\n            </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n","\nimport React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport Axios from 'axios';\n\nclass EditContact extends Component {\n\n    state= {\n        name:'',\n        email:'',\n        phone:'',\n        errors: {}\n    }\n\n    async componentDidMount() {\n         const { id } = this.props.match.params;\n         const res = await Axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n\n         const contact = res.data ;\n\n         this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n         });\n    }\n\n    onChange = (e) => this.setState({[e.target.name] : e.target.value})\n\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {name, email, phone} = this.state;\n\n        if(name === ''){\n            this.setState({errors: {name: 'Name Is required'}});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: 'Email Is required'}})\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: 'Name Is required'}});\n            return;\n        }\n        \n\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n        \n        const { id } = this.props.match.params;\n        \n        const res = await Axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data})\n\n        //Clear State\n        this.setState({\n            name:'',\n            email:'',\n            phone:'',\n            errors: {}\n        })\n        this.props.history.push('/')\n    }\n    render() {\n        const {name, email, phone, errors} = this.state;\n        return(\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card-mb-3\">\n                        <div className=\"card-header\"><h5>Edit contact</h5></div>\n                        <div className=\"card-body\">\n                         <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                        <TextInputGroup \n                        label=\"Name\" \n                        name=\"name\"\n                        value={name}\n                        placeholder=\"Enter a name...\"\n                        onChange={this.onChange}\n                        error={errors.name}\n                        />\n                        <TextInputGroup \n                        label=\"Email\" \n                        name=\"email\"\n                        value={email}\n                        placeholder=\"Enter email\"\n                        type=\"email\"\n                        onChange={this.onChange}\n                        error={errors.email}\n                        />\n                        <TextInputGroup \n                        label=\"Phone Number\" \n                        name=\"phone\"\n                        value={phone}\n                        placeholder=\"Enter Phone Number\"\n                        onChange={this.onChange}\n                        error={errors.phone}\n                          />\n                        <input type=\"submit\" className=\"btn btn-block btn-light\" value=\"Update\"/>\n                    </form>\n                </div>\n            </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nconst Header =  (props) => {\n    const {branding} = props;\n    return (\n     <div>\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n            <div>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\"><i className=\"fa fa-home\"></i>Home</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/addcontact\" className=\"nav-link\"><i className=\"fa fa-plus\"></i>Add New</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\">About</Link>\n                    </li>\n\n                    \n                </ul>\n            </div>\n            </div>\n            \n        </nav>\n    </div>\n    )\n}\nHeader.defaultProps = {\n    branding: 'Contact Manager'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            <h4 className=\"display-4\">About Contact Manager</h4>\n            <p className=\"lead\">Simple app To manage contacts</p>\n            <p className=\"secondary-content\">This is version 1.0.0</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport {Consumer} from '../../context';\nimport Axios from 'axios';\nimport { Link }from 'react-router-dom';\n;\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n        await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n             dispatch({type:'DELETE_CONTACT', payload: id})\n    }\n    render() {\n        const {id, name, email, phone} = this.props.contact;\n        const {showContactInfo} = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const{ dispatch } = value;\n                    return (\n                    <React.Fragment>\n                        <div className=\"card card-body mb-3\">\n                         <h5>{name}{' '}\n\n                        <i className=\"fa fa-sort-down\" \n                        style={{cursor: 'pointer'}} \n                        onClick={() => {this.setState({showContactInfo: !this.state.showContactInfo})}}></i>\n\n                        <i className=\"fa fa-times\" \n                        style={{color:'red', cursor:'pointer', float: 'right' }} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\n\n                        <Link to={`contact/edit/${id}`} >\n                            <i className=\"fa fa-pencil mr-4\"\n                            style={{cursor: 'pointer',float: 'right', color:'blue'}}></i>\n                        </Link>\n\n                        </h5>\n                        {showContactInfo ? (<ul className=\"list-group\">\n                        <li className=\"list-group-item\">Email: {email}</li>\n                        <li className=\"list-group-item\">Phone: {phone}</li>\n                        </ul>) : null}\n                        </div>\n                    </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n       \n        \n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n}\n\n\nexport default Contact;\n","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport {Consumer} from '../../context'\n\n class Contacts extends Component {\n    render() {\n        return(\n            <Consumer>\n                { value => {\n                    const {contacts} = value;\n                    return(\n                        <React.Fragment>\n                            <h3 className=\"display-5 mb-3\">Contacts list</h3>\n                            {contacts.map(contact => (\n                            <Contact \n                            key={contact.id}\n                            contact={contact}\n                           />\n                                ))}\n                            \n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\nexport default Contacts;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport Contacts from './components/contacts/Contacts';\nimport { Provider } from './context';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container col-8\">\n              <Switch>\n                <Route exact path=\"/\" component= {Contacts} />\n                <Route exact path=\"/about\" component= {About} />\n                <Route exact path=\"/addcontact\" component= {AddContact} />\n                <Route exact path =\"/contact/edit/:id\" component={EditContact}/>                \n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}